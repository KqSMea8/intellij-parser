TRUE: 'TRUE';
FALSE: 'FALSE';
ALL: 'ALL';
AND: 'AND';
OR: 'OR';
NOT: 'NOT' | '!';
LIKE: 'LIKE';
JOIN: 'JOIN';
IF: 'IF';
EXISTS: 'EXISTS';
ASC: 'ASC';
DESC: 'DESC';
ORDER: 'ORDER';
GROUP: 'GROUP';
BY: 'BY';
HAVING: 'HAVING';
WHERE: 'WHERE';
FROM: 'FROM';
AS: 'AS';
SELECT: 'SELECT';
DISTINCT: 'DISTINCT';
INSERT: 'INSERT';
OVERWRITE: 'OVERWRITE';
OUTER: 'OUTER';
UNIQUEJOIN: 'UNIQUEJOIN';
PRESERVE: 'PRESERVE';
LEFT: 'LEFT';
RIGHT: 'RIGHT';
FULL: 'FULL';
ON: 'ON';
PARTITION: 'PARTITION';
PARTITIONS: 'PARTITIONS';
TABLE: 'TABLE';
TABLES: 'TABLES';
COLUMNS: 'COLUMNS';
INDEX: 'INDEX';
INDEXES: 'INDEXES';
REBUILD: 'REBUILD';
FUNCTIONS: 'FUNCTIONS';
SHOW: 'SHOW';
MSCK: 'MSCK';
REPAIR: 'REPAIR';
DIRECTORY: 'DIRECTORY';
LOCAL: 'LOCAL';
TRANSFORM: 'TRANSFORM';
USING: 'USING';
CLUSTER: 'CLUSTER';
DISTRIBUTE: 'DISTRIBUTE';
SORT: 'SORT';
UNION: 'UNION';
LOAD: 'LOAD';
EXPORT: 'EXPORT';
IMPORT: 'IMPORT';
DATA: 'DATA';
INPATH: 'INPATH';
IS: 'IS';
NULL: 'NULL';
CREATE: 'CREATE';
EXTERNAL: 'EXTERNAL';
ALTER: 'ALTER';
CHANGE: 'CHANGE';
COLUMN: 'COLUMN';
FIRST: 'FIRST';
AFTER: 'AFTER';
DESCRIBE: 'DESCRIBE';
DROP: 'DROP';
RENAME: 'RENAME';
IGNORE: 'IGNORE';
PROTECTION: 'PROTECTION';
TO: 'TO';
COMMENT: 'KWCOMMENT';
BOOLEAN: 'BOOLEAN';
TINYINT: 'TINYINT';
SMALLINT: 'SMALLINT';
INT: 'INT';
BIGINT: 'BIGINT';
FLOAT: 'FLOAT';
DOUBLE: 'DOUBLE';
DATE: 'DATE';
DATETIME: 'DATETIME';
TIMESTAMP: 'TIMESTAMP';
DECIMAL: 'DECIMAL';
STRING: 'STRING';
ARRAY: 'ARRAY';
STRUCT: 'STRUCT';
MAP: 'MAP';
UNIONTYPE: 'UNIONTYPE';
REDUCE: 'REDUCE';
PARTITIONED: 'PARTITIONED';
CLUSTERED: 'CLUSTERED';
SORTED: 'SORTED';
INTO: 'INTO';
BUCKETS: 'BUCKETS';
ROW: 'ROW';
ROWS: 'ROWS';
FORMAT: 'FORMAT';
DELIMITED: 'DELIMITED';
FIELDS: 'FIELDS';
TERMINATED: 'TERMINATED';
ESCAPED: 'ESCAPED';
COLLECTION: 'COLLECTION';
ITEMS: 'ITEMS';
KEYS: 'KEYS';
KEY_TYPE: '$KEY$';
LINES: 'LINES';
STORED: 'STORED';
FILEFORMAT: 'FILEFORMAT';
SEQUENCEFILE: 'SEQUENCEFILE';
TEXTFILE: 'TEXTFILE';
RCFILE: 'RCFILE';
ORCFILE: 'ORC';
INPUTFORMAT: 'INPUTFORMAT';
OUTPUTFORMAT: 'OUTPUTFORMAT';
INPUTDRIVER: 'INPUTDRIVER';
OUTPUTDRIVER: 'OUTPUTDRIVER';
OFFLINE: 'OFFLINE';
ENABLE: 'ENABLE';
DISABLE: 'DISABLE';
READONLY: 'READONLY';
NO_DROP: 'NO_DROP';
LOCATION: 'LOCATION';
TABLESAMPLE: 'TABLESAMPLE';
BUCKET: 'BUCKET';
OUT: 'OUT';
OF: 'OF';
PERCENT: 'PERCENT';
CAST: 'CAST';
ADD: 'ADD';
REPLACE: 'REPLACE';
RLIKE: 'RLIKE';
REGEXP: 'REGEXP';
TEMPORARY: 'TEMPORARY';
FUNCTION: 'FUNCTION';
MACRO: 'MACRO';
EXPLAIN: 'EXPLAIN';
EXTENDED: 'EXTENDED';
FORMATTED: 'FORMATTED';
PRETTY: 'PRETTY';
DEPENDENCY: 'DEPENDENCY';
LOGICAL: 'LOGICAL';
SERDE: 'SERDE';
WITH: 'WITH';
DEFERRED: 'DEFERRED';
SERDEPROPERTIES: 'SERDEPROPERTIES';
DBPROPERTIES: 'DBPROPERTIES';
LIMIT: 'LIMIT';
SET: 'SET';
UNSET: 'UNSET';
TBLPROPERTIES: 'TBLPROPERTIES';
IDXPROPERTIES: 'IDXPROPERTIES';
VALUE_TYPE: '$VALUE$';
ELEM_TYPE: '$ELEM$';
CASE: 'CASE';
WHEN: 'WHEN';
THEN: 'THEN';
ELSE: 'ELSE';
END: 'END';
MAPJOIN: 'MAPJOIN';
STREAMTABLE: 'STREAMTABLE';
HOLD_DDLTIME: 'HOLD_DDLTIME';
CLUSTERSTATUS: 'CLUSTERSTATUS';
UTC: 'UTC';
UTCTIMESTAMP: 'UTC_TMESTAMP';
LONG: 'LONG';
DELETE: 'DELETE';
KWPLUS: 'KWPLUS';
KWMINUS: 'KWMINUS';
FETCH: 'FETCH';
INTERSECT: 'INTERSECT';
VIEW: 'VIEW';
IN: 'IN';
DATABASE: 'DATABASE';
DATABASES: 'DATABASES';
MATERIALIZED: 'MATERIALIZED';
SCHEMA: 'SCHEMA';
SCHEMAS: 'SCHEMAS';
GRANT: 'GRANT';
REVOKE: 'REVOKE';
SSL: 'SSL';
UNDO: 'UNDO';
LOCK: 'LOCK';
LOCKS: 'LOCKS';
UNLOCK: 'UNLOCK';
SHARED: 'SHARED';
EXCLUSIVE: 'EXCLUSIVE';
PROCEDURE: 'PROCEDURE';
UNSIGNED: 'UNSIGNED';
WHILE: 'WHILE';
READ: 'READ';
READS: 'READS';
PURGE: 'PURGE';
RANGE: 'RANGE';
ANALYZE: 'ANALYZE';
BEFORE: 'BEFORE';
BETWEEN: 'BETWEEN';
BOTH: 'BOTH';
BINARY: 'BINARY';
CROSS: 'CROSS';
CONTINUE: 'CONTINUE';
CURSOR: 'CURSOR';
TRIGGER: 'TRIGGER';
RECORDREADER: 'RECORDREADER';
RECORDWRITER: 'RECORDWRITER';
SEMI: 'SEMI';
LATERAL: 'LATERAL';
TOUCH: 'TOUCH';
ARCHIVE: 'ARCHIVE';
UNARCHIVE: 'UNARCHIVE';
COMPUTE: 'COMPUTE';
STATISTICS: 'STATISTICS';
USE: 'USE';
OPTION: 'OPTION';
CONCATENATE: 'CONCATENATE';
SHOW_DATABASE: 'SHOW_DATABASE';
UPDATE: 'UPDATE';
RESTRICT: 'RESTRICT';
CASCADE: 'CASCADE';
SKEWED: 'SKEWED';
ROLLUP: 'ROLLUP';
CUBE: 'CUBE';
DIRECTORIES: 'DIRECTORIES';
FOR: 'FOR';
WINDOW: 'WINDOW';
UNBOUNDED: 'UNBOUNDED';
PRECEDING: 'PRECEDING';
FOLLOWING: 'FOLLOWING';
CURRENT: 'CURRENT';
LESS: 'LESS';
MORE: 'MORE';
OVER: 'OVER';
GROUPING: 'GROUPING';
SETS: 'SETS';
TRUNCATE: 'TRUNCATE';
NOSCAN: 'NOSCAN';
PARTIALSCAN: 'PARTIALSCAN';
USER: 'USER';
ROLE: 'ROLE';
INNER: 'INNER';
EXCHANGE: 'EXCHANGE';
VALUES: 'VALUES';
VALUE: 'VALUE';

// Operators NOTE: if you add a new function/operator, add it to sysFuncNames so that describe
// function _FUNC_ will work.

DOT: '.'; // generated as a part of Number rule
COLON: ':';
COMMA: ',';
SEMICOLON: ';';

LPAREN: '(';
RPAREN: ')';
LSQUARE: '[';
RSQUARE: ']';
LCURLY: '{';
RCURLY: '}';

EQUAL: '=' | '==';
EQUAL_NS: '<=>';
NOTEQUAL: '<>' | '!=';
LESSTHANOREQUALTO: '<=';
LESSTHAN: '<';
GREATERTHANOREQUALTO: '>=';
GREATERTHAN: '>';

DIVIDE: '/';
PLUS: '+';
MINUS: '-';
STAR: '*';
MOD: '%';
DIV: 'DIV';

AMPERSAND: '&';
TILDE: '~';
BITWISEOR: '|';
BITWISEXOR: '^';
QUESTION: '?';
DOLLAR: '$';

// LITERALS
fragment Letter: [A-Za-z];

fragment HexDigit: [A-Fa-f];

fragment Digit: [0-9];

fragment Exponent: ('e' | 'E') ( PLUS | MINUS)? (Digit)+;

fragment RegexComponent:
	[A-Za-z0-9_]
	| PLUS
	| STAR
	| QUESTION
	| MINUS
	| DOT
	| LPAREN
	| RPAREN
	| LSQUARE
	| RSQUARE
	| LCURLY
	| RCURLY
	| BITWISEXOR
	| BITWISEOR
	| DOLLAR;

StringLiteral:
	(
		'\'' ( ~('\'' | '\\') | ('\\' .))* '\''
		| '\"' ( ~('\"' | '\\') | ('\\' .))* '\"'
	)+;

CharSetLiteral: StringLiteral | '0' 'X' (HexDigit | Digit)+;

BigintLiteral: (Digit)+ 'L';

SmallintLiteral: (Digit)+ 'S';

TinyintLiteral: (Digit)+ 'Y';

DecimalLiteral: Number 'B' 'D';

ByteLengthLiteral:
	(Digit)+ ('b' | 'B' | 'k' | 'K' | 'm' | 'M' | 'g' | 'G');

Number: (Digit)+ ( DOT (Digit)* (Exponent)? | Exponent)?;

Identifier:
	(Letter | Digit) (Letter | Digit | '_')*
	| '`' RegexComponent+ '`';

CharSetName: '_' (Letter | Digit | '_' | '-' | '.' | ':')+;

WS: (' ' | '\r' | '\t' | '\n');
